compile
migrate
let accounts = await web3.eth.getAccounts()
let instance = await AveragePriceAuction.deployed()
instance.auctionItem("netflix","baap ki company",50,150, {from: accounts[0]})
instance.bid(web3.utils.keccak256(web3.eth.abi.encodeParameters(["uint256","string"],[100,"beneficiary"])),0,"93085b6e90df6765fc0409461963ac388870c8ed241ffb6935a80898f2436402",{from:accounts[0],value:310})
web3.eth.getBalance(accounts[1])
instance.bid(web3.utils.keccak256(web3.eth.abi.encodeParameters(["uint256","string"],[100,"first"])),0,"93085b6e90df6765fc0409461963ac388870c8ed241ffb6935a80898f2436402",{from:accounts[1],value:210})
web3.eth.getBalance(accounts[1])
instance.bid(web3.utils.keccak256(web3.eth.abi.encodeParameters(["uint256","string"],[150,"first repeat"])),0,"93085b6e90df6765fc0409461963ac388870c8ed241ffb6935a80898f2436402",{from:accounts[1],value:360})
web3.eth.getBalance(accounts[1])
web3.eth.getBalance(accounts[2])
instance.bid(web3.utils.keccak256(web3.eth.abi.encodeParameters(["uint256","string"],[50,"second"])),0,"93085b6e90df6765fc0409461963ac388870c8ed241ffb6935a80898f2436402",{from:accounts[2],value:150})
web3.eth.getBalance(accounts[2])
web3.eth.getBalance(accounts[3])
instance.bid(web3.utils.keccak256(web3.eth.abi.encodeParameters(["uint256","string"],[120,"third"])),0,"93085b6e90df6765fc0409461963ac388870c8ed241ffb6935a80898f2436402",{from:accounts[3],value:430})
web3.eth.getBalance(accounts[3])
web3.eth.getBalance(accounts[4])
instance.bid(web3.utils.keccak256(web3.eth.abi.encodeParameters(["uint256","string"],[90,"fourth and invalid"])),0,"93085b6e90df6765fc0409461963ac388870c8ed241ffb6935a80898f2436402",{from:accounts[4],value:170})
web3.eth.getBalance(accounts[4])
instance.reveal(50,"did not bid",0,{from:accounts[5]})
web3.eth.getBalance(accounts[1])
instance.reveal(100,"first",0,{from:accounts[1]})
web3.eth.getBalance(accounts[1])
web3.eth.getBalance(accounts[2])
instance.reveal(50,"second",0,{from:accounts[2]})
web3.eth.getBalance(accounts[2])
web3.eth.getBalance(accounts[3])
instance.reveal(120,"third",0,{from:accounts[3]})
web3.eth.getBalance(accounts[3])
web3.eth.getBalance(accounts[4])
instance.reveal(90,"fourth and invalid",0,{from:accounts[4]})
web3.eth.getBalance(accounts[4])
web3.eth.getBalance(accounts[2])
web3.eth.getBalance(accounts[3])
y = await instance.auctionEnd(0,{from:accounts[0]})
y.logs[0]
web3.eth.getBalance(accounts[2])
web3.eth.getBalance(accounts[3])
web3.eth.getBalance(accounts[0])
instance.sellItem(0,"ye le password",{from:accounts[0],value:200})
web3.eth.getBalance(accounts[0])
web3.eth.getBalance(accounts[1])
instance.confirmDelivery(0,{from:accounts[1]})
web3.eth.getBalance(accounts[0])
web3.eth.getBalance(accounts[1])
instance.auctionItem("prime","doosre baap ki company",30,30, {from: accounts[0]})
instance.getactiveauctions()
instance.getallauctions()
