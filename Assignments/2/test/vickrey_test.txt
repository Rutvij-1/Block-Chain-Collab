compile
migrate
let accounts = await web3.eth.getAccounts()
let instance = await VickreyAuction2.deployed()
instance.auctionItem("netflix","baap ki company",120,120, {from: accounts[0]})
instance.getactiveauctions()
instance.bid(web3.utils.keccak256(web3.eth.abi.encodeParameters(["uint256","string"],[100,"beneficiary"])),0,{from:accounts[0],value:110})
web3.eth.getBalance(accounts[1])
instance.bid(web3.utils.keccak256(web3.eth.abi.encodeParameters(["uint256","string"],[100,"first"])),0,{from:accounts[1],value:110})
web3.eth.getBalance(accounts[1])
instance.bid(web3.utils.keccak256(web3.eth.abi.encodeParameters(["uint256","string"],[150,"first repeat"])),0,{from:accounts[1],value:160})
web3.eth.getBalance(accounts[1])
web3.eth.getBalance(accounts[2])
instance.bid(web3.utils.keccak256(web3.eth.abi.encodeParameters(["uint256","string"],[50,"second and lower"])),0,{from:accounts[2],value:150})
web3.eth.getBalance(accounts[2])
web3.eth.getBalance(accounts[3])
instance.bid(web3.utils.keccak256(web3.eth.abi.encodeParameters(["uint256","string"],[110,"third and invalid"])),0,{from:accounts[3],value:90})
web3.eth.getBalance(accounts[3])
instance.reveal(50,"second and lower",0,{from:accounts[4]})
web3.eth.getBalance(accounts[2])
instance.reveal(50,"second and lower",0,{from:accounts[2]})
web3.eth.getBalance(accounts[2])
web3.eth.getBalance(accounts[3])
instance.reveal(110,"third and invalid",0,{from:accounts[3]})
web3.eth.getBalance(accounts[3])
web3.eth.getBalance(accounts[1])
instance.reveal(100,"first",0,{from:accounts[1]})
web3.eth.getBalance(accounts[1])
web3.eth.getBalance(accounts[0])
instance.auctionEnd(0,{from:accounts[0]})
web3.eth.getBalance(accounts[0])
web3.eth.getBalance(accounts[2])
instance.withdraw(0,{from:accounts[2]})
web3.eth.getBalance(accounts[2])
